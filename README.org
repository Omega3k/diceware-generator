* diceware-generator

FIXME: Write a one-line description of your library/project.

** Overview

FIXME: Write a paragraph about the library/project and highlight its goals.

** Setup

To get an interactive development environment run:

#+BEGIN_SRC shell
# start front-end development server
lein figwheel

# start back-end development server
lein ring server
#+END_SRC

and open your browser at [[http://localhost:3449][localhost:3449]]. This will auto compile and
send all changes to the browser without the need to reload. After the
compilation process is complete, you will get a Browser Connected
REPL. An easy way to try it is:

#+BEGIN_SRC clojure
(js/alert "Am I connected?")
#+END_SRC

and you should see an alert in the browser window.

To clean all compiled files:

#+BEGIN_SRC shell
lein clean
#+END_SRC

To create a production build run:

#+BEGIN_SRC shell
lein do clean, cljsbuild once min
lein with-profile -dev,+production uberjar
#+END_SRC

#+BEGIN_SRC shell
heroku local web
git push heroku master
heroku open
#+END_SRC

And open your browser in `resources/public/index.html`. You will not
get live reloading, nor a REPL.

This project was created with:

#+BEGIN_SRC shell
lein new figwheel diceware-generator -- --reagent
cd diceware-generator
heroku create
#+END_SRC

** License

Copyright Â© 2014 FIXME

Distributed under the Eclipse Public License either version 1.0 or (at your option) any later version.
